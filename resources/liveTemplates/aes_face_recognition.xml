<templateSet group="aes_face_recognition">
  <template name="aes_face_Find_faces" value="//Make sure the bitmap file was generated using the RGB_565&#10;//configuration, or else it cannot be used for detection&#10;//For more information, see &#10;//http://developer.android.com/reference/android/media/FaceDetector.html#findFaces(android.graphics.Bitmap, android.media.FaceDetector.Face[])&#10; BitmapFactory.Options bmpOptions = new BitmapFactory.Options();&#10; bmpOptions.inPreferredConfig = Bitmap.Config.RGB_565;&#10;&#10; //Decode the file from Resources and get some of its parameters.&#10; //You can also use any of the decode methods from BitmapFactory&#10; Bitmap bmp = BitmapFactory.decodeResource(getResources(), &#10; /*TODO: Insert your drawable resource ID here*/, bmpOptions);&#10; int MaxNumberOfDetectedFaces = 2;&#10;&#10; //Instantiate a vector with the number of faces you want&#10; Face[] faces = new FaceDetector.Face[MaxNumberOfDetectedFaces];&#10; //Instantiate a FaceDetector object for the bitmap&#10; FaceDetector fd = new FaceDetector(bmp.getWidth(), bmp.getHeight(),MaxNumberOfDetectedFaces);&#10; //Use the findfaces() method to actually process the bitmap&#10; if (fd.findFaces(bmp, faces) &gt; 0) {&#10;//Do something here. You can see how accurate the detection was&#10;//by calling confidence() on any of the found faces.&#10;//In this example, it looks only for the first face (faces[0]).&#10;Toast.makeText(this, &quot;Confidence: &quot; + faces[0].confidence(), Toast.LENGTH_SHORT).show();&#10; }&#10; else {&#10; //No faces were found in the bitmap&#10;Toast.makeText(this, &quot;No face found!&quot;, Toast.LENGTH_SHORT).show();&#10; }" description="Find faces in Bitmap and how much confidence can you take on them." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>